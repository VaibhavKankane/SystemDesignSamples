version: '3.4'

services:
  memorystore1:
    image: ${DOCKER_REGISTRY-}memorystore
    ports:
      - 8082:8080
      - 8083:8081
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:8080;http://+:8081
      - WALFilePath=/my/app/wal1.dat
      - InstanceId=1
      - Host=8083  #This is Http2 endpoint to be registered with zookeeper for grpc
      - ZK_CONNECTION=zookeeper:2181
    volumes:
      - ./:/my/app/
    build:
      # dockerignore file should be in the context directory
      context: .
      dockerfile: ../MemoryStore/Dockerfile
    depends_on: 
      - zoo1


  memorystore2:
    image: ${DOCKER_REGISTRY-}memorystore
    ports:
      - 8084:8080
      - 8085:8081
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:8080;http://+:8081
      - WALFilePath=/my/app/wal2.dat
      - InstanceId=2
      - Host=8085  #This is Http2 endpoint to be registered with zookeeper for grpc
      - ZK_CONNECTION=zookeeper:2181
    volumes:
      - ./:/my/app/
    build:
      context: .
      dockerfile: ../MemoryStore/Dockerfile
    depends_on: 
      - zoo1

  thickclient:
    image: ${DOCKER_REGISTRY-}thickclient
    ports:
      - 5030:5030
      - 5031:5031
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:5030;http://+:5031
      - ZK_CONNECTION=zookeeper:2181
    build:
      # dockerignore file should be in the context directory
      context: .
      dockerfile: ../ThickClient/Dockerfile
    depends_on: 
      - zoo1

  externalclient:
     image:  ${DOCKER_REGISTRY-}externalclient
     ports:
       - 1234:1234
     environment:
       - MetricsPort=1234
       - ASPNETCORE_URLS=http://*:1234 #Prometheus aspnet core package uses this
     build:
      context: .
      dockerfile: ../ExternalClient/Dockerfile
     depends_on: 
      - zoo1

  prometheus:
    image: prom/prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      # - prometheus_data:/prometheus/data

  grafana: 
    image: grafana/grafana
    depends_on:
      - prometheus
    #command:
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=pass
    restart: always
    ports:
      - 3000:3000

  seq:
    image: datalust/seq:latest
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5340:80

  zoo1:
    container_name: zookeeper
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
      - '7000:7000' # This is for metrics export so that prometheus can scrape it
    environment:
      ZOO_MY_ID: 2
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    hostname:
        zoo1
    volumes:
      - ./zoo.cfg:/opt/bitnami/zookeeper/conf/zoo.cfg
      - ./zkData:/zkData
